import tkinter as tk
from tkinter import messagebox
import sqlite3
import hashlib

# Database Setup
conn = sqlite3.connect("users.db")
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        email TEXT UNIQUE NOT NULL,
        password TEXT NOT NULL,
        account_type TEXT NOT NULL
    )
''')
conn.commit()

# Function to Hash Password (Using SHA256)
def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

# Function to Handle Login
def login():
    email = entry_email.get()
    password = entry_password.get()

    if not email or not password:
        messagebox.showerror("Login Failed", "Email and password cannot be empty!")
        return

    cursor.execute("SELECT password, account_type FROM users WHERE email=?", (email,))
    user = cursor.fetchone()

    if user and user[0] == hash_password(password):
        messagebox.showinfo("Login Successful", f"Welcome, {user[1]} user!")
        root.destroy()
        open_dashboard(user[1])  # Open respective interface
    else:
        messagebox.showerror("Login Failed", "Invalid email or password")

# Function to Open Dashboard Based on Account Type
def open_dashboard(account_type):
    dashboard = tk.Tk()
    dashboard.title(f"{account_type} Dashboard")
    dashboard.geometry("400x300")

    if account_type == "Professional":
        tk.Label(dashboard, text="Welcome to Professional Expense Tracker!", font=("Arial", 14)).pack(pady=20)
    else:
        tk.Label(dashboard, text="Welcome to Personal Expense Tracker!", font=("Arial", 14)).pack(pady=20)

    tk.Button(dashboard, text="Logout", command=dashboard.destroy, bg="red", fg="white", font=("Arial", 12)).pack(pady=20)
    
    dashboard.mainloop()

# Function to Register New Users
def register():
    email = entry_email.get()
    password = entry_password.get()
    account_type = account_type_var.get()

    if not email or not password or not account_type:
        messagebox.showerror("Registration Failed", "All fields are required!")
        return

    try:
        hashed_pwd = hash_password(password)
        cursor.execute("INSERT INTO users (email, password, account_type) VALUES (?, ?, ?)", 
                       (email, hashed_pwd, account_type))
        conn.commit()
        messagebox.showinfo("Success", "Registration successful!")
    except sqlite3.IntegrityError:
        messagebox.showerror("Error", "Email already registered!")

# Tkinter UI Setup
root = tk.Tk()
root.title("Login/Register")
root.geometry("400x400")

tk.Label(root, text="Email:", font=("Arial", 12)).pack(pady=5)
entry_email = tk.Entry(root, font=("Arial", 12))
entry_email.pack()

tk.Label(root, text="Password:", font=("Arial", 12)).pack(pady=5)
entry_password = tk.Entry(root, font=("Arial", 12), show="*")
entry_password.pack()

tk.Label(root, text="Select Account Type:", font=("Arial", 12)).pack(pady=5)
account_type_var = tk.StringVar()
tk.Radiobutton(root, text="Personal", variable=account_type_var, value="Personal").pack()
tk.Radiobutton(root, text="Professional", variable=account_type_var, value="Professional").pack()

tk.Button(root, text="Login", command=login, bg="#28a745", fg="white", font=("Arial", 12)).pack(pady=10)
tk.Button(root, text="Register", command=register, bg="#007bff", fg="white", font=("Arial", 12)).pack(pady=5)

root.mainloop()
